name: Java CI
on:
  push: #ceci permet de faire le push dans la branche choisi
    branches:
      - awa-dev-branch 
      - '**/feature.*/'


jobs:
  job1:
    name: job1 Starting with a Maven workflow template
    runs-on: ubuntu-latest #execution de la version de VM=>ex:tester un exmple os
    steps: #permet lister les differents étapes de notre app
      - uses: actions/checkout@v2 # il checkout étape télécharge une copie de notre référentiel
      - name: set up node
        uses: actions/setup-node@v1
      - name: Install bats
        run: npm install -g bats
      - name: execute a cmd
        run: bats -v
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Build with Maven
        run: mvn -B package --file pom.xml
#chaque s'execute dans une vm
  job2:
      name: job2 Specifying the JVM and node version and architecture
      #needs: job1
      runs-on: ubuntu-20.04
      steps:
        - uses: actions/checkout@v2 # The checkout step downloads a copy of your repository on the runner.
        - uses: actions/setup-java@v1
          with:
            java-version: 1.8
            architecture: x64
        - uses: actions/setup-node@v1
          with:
            node-version: 12.16.1
        - name: Install node.js packages
          run: npm install

  job3:
    name: job3 Running on a different operating system
    needs: job2
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-16.04, ubuntu-18.04]
        node: [6, 8, 10]
    steps:
      #- uses: actions/checkout@v2 # The checkout step downloads a copy of your repository on the runner.
      #if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
          architecture: x64
      #- name: Install node.js packages
      #  run: npm install
      - name: Example Checking os and node version
        run: |
          node --version
          mvn -version
          lsb_release -a


  job4:
    name: job4 Building and testing your code
    needs: job2
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2 # The checkout step downloads a copy of your repository on the runner.
      - uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - uses: actions/setup-node@v1
        with:
          node-version: 12.16.1
      - name: Install node.js packages
        run: npm install
      - name: Run backend test
        run: mvn clean verify -P-webpack
      - name: Run frontend test
        run: npm run test

  job5:
    name: job5 Caching dependencies to improve run
    #needs: job2
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Install node.js packages
        run: npm install
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build with Maven
        run: mvn -B package --file pom.xml