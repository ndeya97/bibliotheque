name: Java CI
on:
  push:
    branches:
      - awa-dev-branch #test
      - '**/feature.*/'


  #release:
      #branches:
        # - test
        # - master
      #types: created


jobs:
  job1:
    name: job1 Starting with a Maven workflow template
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2 # The checkout step downloads a copy of your repository on the runner.
      - name: set up node
        uses: actions/setup-node@v1
      - name: Install bats
        run: npm install -g bats
      - name: execute a cmd
        run: bats -v
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Build with Maven
        run: mvn -B package --file pom.xml

  job2:
      name: job2 Specifying the JVM and node version and architecture
      #needs: job1
      runs-on: ubuntu-20.04
      steps:
        - uses: actions/checkout@v2 # The checkout step downloads a copy of your repository on the runner.
        - uses: actions/setup-java@v1
          with:
            java-version: 1.8
            architecture: x64
        - uses: actions/setup-node@v1
          with:
            node-version: 12.16.1
        - name: Install node.js packages
          run: npm install

  job3:
    name: job3 Running on a different operating system
    needs: job2
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-16.04, ubuntu-18.04]
        node: [6, 8, 10]
    steps:
      #- uses: actions/checkout@v2 # The checkout step downloads a copy of your repository on the runner.
      #if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
          architecture: x64
      #- name: Install node.js packages
      #  run: npm install
      - name: Example Checking os and node version
        run: |
          node --version
          mvn -version
          lsb_release -a